name: fetch-pypi-oidc-token
description: fetch-pypi-oidc-token

inputs: {}

outputs:
  token:
    description: The OIDC token for the PyPI
    value: ${{ steps.oidc.outputs.token }}

runs:
  using: composite
  steps:
    - name: oidc
      id: oidc
      run: |
        # retrieve the ambient OIDC token
        resp=$(curl -H "authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=pypi")
        token=$(jq -r '.value' <<< "${resp}")

        # exchange the OIDC token for an API token
        resp=$(curl -X POST https://pypi.org/_/oidc/mint-token -d "{\"token\": \"${token}\"}")
        token=$(jq -r '.token' <<< "${resp}")

        # mask the newly minted API token, so that we don't accidentally leak it
        echo "::add-mask::${token}"

        # see the next step in the workflow for an example of using this step output
        echo "token=${token}" >> "${GITHUB_OUTPUT}"
      shell: bash
